<?php

/**
 * @file
 * Hooks and hacks.
 */

/**
 * Implements hook_form_alter().
 */
function reol_facetbrowser_form_ding_facetbrowser_form_alter(&$form, &$form_state) {
  if (isset($form['facet.type']['facet.type']['#options'])) {
    $groups = [
      'Ebog' => [
        'ebog',
        'billedbog (net)',
        'tegneserie (net)',
        'graphic novel (net)',
      ],
      'Lydbog' => [
        'lydbog (net)',
        'lydbog (bÃ¥nd)',
        'lydbog (cd)',
      ],
      'Podcast' => [
        'lyd (podcast)',
        'lyd (net)',
      ],
    ];

    $options = $form['facet.type']['facet.type']['#options'];
    $groupOptions = [];
    $search_term = preg_replace('@^search/ting/@', '', request_path());
    $search_query = drupal_get_query_parameters();
    unset($search_query['group-facets']);
    $search_string = $search_term . '?' . drupal_http_build_query($search_query);

    foreach ($groups as $name => $types) {
      $totalCount = 0;
      $groupFacets = [];
      foreach ($types as $type) {
        if (isset($options[$type])) {
          if (preg_match('/(?P<count>\d+)/', strip_tags($options[$type]), $matches)) {
            $totalCount += (int) $matches['count'];
          }

          $groupFacets[] = $type;
          unset($options[$type]);
        }
      }
      if (!empty($groupFacets)) {
        $name .= ' [' . implode(', ', $groupFacets) . ']';
        $name .= ' (' . $totalCount . ')';
        $groupOptions[$name] = ting_field_search_link($name, $search_string, [],
          ['query' => ['group-facets' => implode(',', $groupFacets)]]);
      }
    }

    // Merge group options with original (and unset) options.
    $form['facet.type']['facet.type']['#options'] = array_merge($groupOptions, $options);
  }
}

/**
 * Implements hook_opensearch_pre_execute().
 */
function reol_facetbrowser_opensearch_pre_execute($request) {
  $params = drupal_get_query_parameters();

  if (isset($params['group-facets']) && $request instanceof TingClientSearchRequest) {
    $groupFacets = preg_split('/,/', $params['group-facets'], NULL, PREG_SPLIT_NO_EMPTY);
    if (!empty($groupFacets)) {
      $query = $request->getQuery();
      if (!empty($query)) {
        $query .= ' and ';
      }
      $query .= '('
        . implode(' or ', array_map(static function ($type) {
          return 'term.type="' . $type . '"';
        }, $groupFacets))
        . ')';
      $request->setQuery($query);
    }
  }
}
