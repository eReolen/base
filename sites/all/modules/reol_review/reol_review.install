<?php

/**
 * @file
 * Installation of reol_review module.
 */

/**
 * Implements hook_install().
 */
function reol_review_install() {
  variable_set('reol_review_fetch_offset', 0);
}

/**
 * Implements hook_schema().
 */
function reol_review_schema() {
  return _reol_review_schema_3();
}

/**
 * Initial version of schema.
 *
 * Moved to helper function as hook_update_N() shouldn't call
 * hook_schema().
 */
function _reol_review_schema_0() {
  $schema = array();

  $schema['reol_review_reviews'] = array(
    'description' => 'Table for eReolen reviews',
    'fields' => array(
      'rrid' => array(
        'description' => 'Primary Key: ID.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'isbn' => array(
        'description' => 'ISBN number of reviewed material.',
        'type' => 'varchar',
        'length' => 13,
        'not null' => TRUE,
        'default' => '',
      ),
      'link' => array(
        'description' => 'Link to review.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'ding_entity_id' => array(
        'description' => 'The ting object id.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'Type of material.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'process' => array(
        'description' => 'Whether this has been scheduled for processing.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'processed' => array(
        'description' => 'Timestamp when this was last processed.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'ding_entity_id' => array('ding_entity_id'),
      'processed' => array('processed'),
      'lookup' => array('processed', 'link'),
    ),
    'unique keys' => array(
      'link' => array('link'),
    ),
    'primary key' => array('rrid'),
  );

  return $schema;
}

/**
 * Second schema version.
 */
function _reol_review_schema_1() {
  $schema = _reol_review_schema_0();

  $schema['reol_review_reviews']['fields']['description'] = array(
    'description' => 'Description of review.',
    'type' => 'text',
    'not null' => FALSE,
    'size' => 'medium',
    'translatable' => TRUE,
  );

  $schema['reol_review_reviews']['fields']['created'] = array(
    'description' => 'Creation date of review.',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );

  return $schema;
}

/**
 * Third schema version.
 */
function _reol_review_schema_2() {
  $schema = _reol_review_schema_1();

  $schema['reol_review_reviews']['fields']['title'] = array(
    'description' => 'Title of material.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  );

  $schema['reol_review_reviews']['fields']['author'] = array(
    'description' => 'Author of material.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  );

  return $schema;
}

/**
 * Fourth schema version.
 */
function _reol_review_schema_3() {
  $schema = _reol_review_schema_2();

  $schema['reol_review_reviews']['fields']['http_code'] = array(
    'description' => 'Http code from url (link).',
    'type' => 'int',
    'unsigned' => FALSE,
    'not null' => FALSE,
    'default' => NULL,
  );

  $schema['reol_review_reviews']['fields']['http_code_updated'] = array(
    'description' => 'Http code updated time.',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => FALSE,
    'default' => NULL,
  );

  return $schema;
}

/**
 * Create the database tables.
 */
function reol_review_update_7101() {
  $schema = _reol_review_schema_0();
  foreach ($schema as $table_name => $definition) {
    db_create_table($table_name, $definition);
  }

  variable_set('reol_review_fetch_offset', 0);
}

/**
 * Update schema.
 */
function reol_review_update_7102() {
  // Yes, this is OK, and I'll tell you why if you ask me...
  $schema = _reol_review_schema_1();
  db_add_field('reol_review_reviews', 'description', $schema['reol_review_reviews']['fields']['description']);
  db_add_field('reol_review_reviews', 'created', $schema['reol_review_reviews']['fields']['created']);

  // Clear out reviews.
  db_truncate('reol_review_reviews')->execute();

  // And start over.
  variable_set('reol_review_fetch_offset', 0);
}

/**
 * Flush out reviews from the old Litteratursiden.
 */
function reol_review_update_7103() {
  db_truncate('reol_review_reviews')->execute();
  variable_del('reol_review_fetch_offset');

  // Yes, this is OK, and I'll tell you why if you ask me...
  $schema = _reol_review_schema_2();
  db_add_field('reol_review_reviews', 'title', $schema['reol_review_reviews']['fields']['title']);
  db_add_field('reol_review_reviews', 'author', $schema['reol_review_reviews']['fields']['author']);
}

/**
 * Add http code to reviews.
 */
function reol_review_update_7104() {
  $schema = _reol_review_schema_3();
  db_add_field('reol_review_reviews', 'http_code', $schema['reol_review_reviews']['fields']['http_code']);
  db_add_field('reol_review_reviews', 'http_code_updated', $schema['reol_review_reviews']['fields']['http_code_updated']);
}
