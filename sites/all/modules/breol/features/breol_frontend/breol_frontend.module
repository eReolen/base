<?php

/**
 * @file
 * Code for the BReol frontend feature.
 */

include_once 'breol_frontend.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types. In this case the subdirectories of
 * ctools_plugin_example/panels are used.
 */
function breol_frontend_ctools_plugin_directory($owner, $plugin_type) {
  return 'plugins/' . $plugin_type;
}

/**
 * Implements hook_theme().
 */
function breol_frontend_theme($existing, $type, $theme, $path) {
  return array(
    'cover_image' => array(
      'variables' => array(
        'image_uri' => NULL,
        'cover_background_color' => 'transparant',
        'title' => '',
        'subtitle' => '',
        'node'  => NULL,
      ),
      'path' => drupal_get_path('module', 'breol_frontend') . '/templates',
      'template' => 'cover-image',
    ),
  );
}

/**
 * Implements hook_entity_info_alter().
 */
function breol_frontend_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['teaser_small'] = array(
    'label' => t('Teaser Small'),
    'custom settings' => TRUE,
  );

  $entity_info['node']['view modes']['teaser_medium'] = array(
    'label' => t('Teaser Medium'),
    'custom settings' => TRUE,
  );

  $entity_info['file']['view modes']['teaser_small'] = array(
    'label' => t('Teaser Small'),
    'custom settings' => TRUE,
  );

  $entity_info['file']['view modes']['teaser_medium'] = array(
    'label' => t('Teaser Medium'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_image_styles_alter().
 */
function breol_frontend_image_styles_alter(&$styles) {
  $styles['ding_list_medium']['effects'] = array(
    array(
      'label' => 'Skalér og beskær',
      'help' => 'Skalering og beskæring bevarer billedets højde-bredde-forhold og beskærer derefter den største dimension. Det er nyttigt til at generere kvadratiske thumbnails uden at forvrænge billedet.',
      'effect callback' => 'image_scale_and_crop_effect',
      'dimensions callback' => 'image_resize_dimensions',
      'form callback' => 'image_resize_form',
      'summary theme' => 'image_resize_summary',
      'module' => 'image',
      'name' => 'image_scale_and_crop',
      'data' => array(
        'width' => 280,
        'height' => 419,
      ),
      'weight' => 1,
    ),
  );
}

/**
 * Implements hook_field_default_field_instances_alter().
 */
function breol_frontend_field_default_field_instances_alter(&$fields) {
  // Remove subjects from search results.
  if (isset($fields['ting_object-ting_object-ting_subjects'])) {
    $fields['ting_object-ting_object-ting_subjects']['display']['search_result']['type'] = 'hidden';
  }

  // Use a formatter that doesn't make the author a link.
  if (isset($fields['ting_object-ting_object-ting_author'])) {
    $fields['ting_object-ting_object-ting_author']['display']['default']['module'] = 'reol_base';
    $fields['ting_object-ting_object-ting_author']['display']['default']['type'] = 'reol_base_author_plain';
    $fields['ting_object-ting_object-ting_author']['display']['default']['label'] = 'hidden';
  }

  // Set image style on compact covers.
  if (isset($fields['ting_object-ting_object-ting_cover'])) {
    $fields['ting_object-ting_object-ting_cover']['display']['compact']['settings']['image_style'] = 'breol_cover_base';
  }

  // Add availability to teaser.
  if (isset($fields['ting_collection-ting_collection-ting_collection_types'])) {
    $fields['ting_collection-ting_collection-ting_collection_types']['display']['teaser'] = array(
      'label' => 'hidden',
      'module' => 'ding_availability',
      'settings' => array(),
      'type' => 'ding_availability_with_labels',
      'weight' => 1,
    );
  }

  if (isset($fields['ting_object-ting_object-ting_abstract'])) {
    $fields['ting_object-ting_object-ting_abstract']['display']['default']['weight'] = 76;
    $fields['ting_object-ting_object-ting_series']['display']['default']['weight'] = 77;
    $fields['ting_object-ting_object-ting_series']['display']['default']['label'] = 'inline';
  }
}

/**
 * Implements hook_field_group_info_alter().
 */
function breol_frontend_field_group_info_alter(&$groups) {
  // Move fields around the default ting object view.
  if (isset($groups['group_ting_object_right_c|ting_object|ting_object|default'])) {
    // Fields to move around.
    $fields = array('ting_abstract', 'ting_series', 'ting_subjects');

    // Remove the fields from current placement.
    $old_values = $groups['group_ting_object_right_c|ting_object|ting_object|default']->data['children'];
    $values = array();
    foreach ($old_values as $value) {
      if (!in_array($value, $fields)) {
        $values[] = $value;
      }
    }
    $groups['group_ting_object_right_c|ting_object|ting_object|default']->data['children'] = $values;

    // Add fields to new placement.
    foreach ($fields as $field) {
      $groups['group_ting_object_meta|ting_object|ting_object|default']->data['children'][] = $field;
    }
  }
}

/**
 * Implements hook_field_default_field_bases_alter().
 */
function breol_frontend_field_default_field_bases_alter(&$fields) {
  // Adjust video paragraphs field to use our video content type.
  if (isset($fields['field_video_node'])) {
    $fields['field_video_node']['settings']['handler_settings']['target_bundles'] = array(
      'breol_video' => 'breol_video',
    );
  }
}
