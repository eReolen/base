<?php
/**
 * @file
 * Main module that attach lazy loading to images.
 */

/**
 * Implements hook_init().
 */
function reol_lazy_load_images_init() {
  drupal_add_js(drupal_get_path('module', 'reol_lazy_load_images') . '/js/reol_lazy_load_images.js');
}

/**
 * Implements hook_image_effect_info().
 */
function reol_lazy_load_images_image_effect_info() {
  $effects = [];

  $effects['reol_lazy_load_images_placeholder'] = [
    'label' => t('Create placeholder image'),
    'help' => t('Create blurred minimal placeholder image'),
    'effect callback' => 'reol_lazy_load_images_placeholder_effect',
    'dimensions passthrough' => TRUE,
  ];

  return $effects;
}

/**
 * Image effect callback function.
 *
 * Resizes the image to 5px with the same aspect rations.
 *
 * @param stdClass $image
 *   The image style use the effect on.
 *
 * @return bool
 *   TRUE if style can be applied else FALSE.
 */
function reol_lazy_load_images_placeholder_effect(stdClass $image) {
  $image->ops[] = '-resize 5x';
  $image->ops[] = '-strip';

  return TRUE;
}

/**
 * Implements hook_image_default_styles().
 */
function reol_lazy_load_images_image_default_styles() {
  $styles = [];

  // New style that can be used to generate the placeholders for cover images.
  // It's base on the eReol_base_cover style.
  $styles['reol_lazy_load_images_cover_placeholder'] = [
    'label' => 'reol_lazy_cover_placeholder',
    'effects' => [
      1 => [
        'name' => 'image_scale_and_crop',
        'data' => [
          'width' => 260,
          'height' => 375,
        ],
        'weight' => 1,
      ],
      2 => [
        'name' => 'reol_lazy_load_images_placeholder',
        'weight' => 2,
      ]
    ],
  ];

  $styles['reol_lazy_cover_podcast_placeholder'] = [
    'label' => 'reol_lazy_cover_podcast_placeholder',
    'effects' => [
      1 => [
        'name' => 'image_scale_and_crop',
        'data' => [
          'width' => 334,
          'height' => 334,
        ],
        'weight' => 1,
      ],
      2 => [
        'name' => 'reol_lazy_load_images_placeholder',
        'weight' => 2,
      ]
    ],
  ];

  $styles['reol_lazy_cover_podcast'] = [
    'label' => 'reol_lazy_cover_podcast',
    'effects' => [
      1 => [
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 334,
          'height' => 334,
        ),
        'weight' => 1,
      ],
    ],
  ];

  return $styles;
}

/**
 * Implements hook_theme_registry_alter().
 */
function reol_lazy_load_images_theme_registry_alter(&$theme_registry) {
  if (isset($theme_registry['image'])) {
    $theme_registry['image']['function'] = 'theme_reol_base_image';
  }
}

/**
 * Image theme function.
 *
 * Insert the "mini" image as source for images with style "ereol_cover_base"
 * and the real image as data-src for lazy loading.
 */
function theme_reol_base_image($variables) {
  $attributes = $variables['attributes'];
  // Hide all <img from screen readers.
  $attributes['aria-hidden'] = 'true';

  $styles = ['ereol_cover_base', 'breol_cover_base', 'reol_lazy_cover_podcast'];

  if (array_key_exists('style_name', $variables) && in_array($variables['style_name'], $styles)) {
    $attributes['data-src'] = file_create_url($variables['path']);
    if ($variables['style_name'] == 'reol_lazy_cover_podcast') {
      // Pod-cast cover.
      $attributes['src'] = image_style_url('reol_lazy_cover_podcast_placeholder', $variables['original_path']);;
    }
    else {
      // Normal cover.
      $attributes['src'] = image_style_url('reol_lazy_load_images_cover_placeholder', $variables['original_path']);;
    }
    $attributes['class'] = 'js-lazy';
  }
  else {
    $attributes['src'] = file_create_url($variables['path']);
  }
  
  foreach (array('width', 'height', 'alt', 'title') as $key) {
    if (isset($variables[$key])) {
      $attributes[$key] = $variables[$key];
    }
  }

  return '<img' . drupal_attributes($attributes) . ' />';
}

/**
 * Implements hook_preprocess_ting_object_cover().
 *
 * Change the image style for pod-cast covers in carousel's to match the
 * pod-cast cover style.
 *
 * Note that this is a hack that might make mixed carousels not working.
 */
function reol_lazy_load_images_preprocess_ting_object_cover(&$variables) {
  $styles = ['ereol_cover_base', 'breol_cover_base'];

  if (array_key_exists('image_style', $variables) && in_array($variables['image_style'], $styles)) {
    $object = $variables['object'];
    $type = reol_base_get_type_name($object->type);
    if ($type == 'podcast') {
      $path = ting_covers_object_path($object->id);
      $alt = implode(', ', $object->creators) . ': ' . $object->title;
      if (file_exists($path)) {
        $variables['image_style'] = 'reol_lazy_cover_podcast';
        $variables['image'] = theme('image_style', array(
          'style_name' => $variables['image_style'],
          'path' => $path,
          'alt' => $alt,
          'original_path' => $path
        ));
      }
    }
  }
}
