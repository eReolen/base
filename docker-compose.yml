version: "3"

services:
  mariadb:
    image: mariadb:10.3
    ports:
      - '3306'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: db
      MYSQL_PASSWORD: db
      MYSQL_DATABASE: db

  phpfpm:
    image: itkdev/php7.0-fpm:latest
    environment:
      - PHP_XDEBUG=${PHP_XDEBUG:-0}
      - PHP_XDEBUG_REMOTE_AUTOSTART=${PHP_XDEBUG_REMOTE_AUTOSTART:-0}
      - PHP_XDEBUG_REMOTE_HOST=${PHP_XDEBUG_REMOTE_HOST:-0.0.0.0}
      - PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK:-0}
      - PHP_MAIL=1
      - PHP_MAX_EXECUTION_TIME=120
      - PHP_MEMORY_LIMIT=512M
      - DOCKER_HOST_DOMAIN=${COMPOSE_PROJECT_NAME}.docker.localhost
    depends_on:
      - mariadb
    volumes:
      - .:/app:delegated

  nginx0:
    image: nginx:latest
    ports:
      - '80'
    depends_on:
      - phpfpm
      - memcached
      - redis
    volumes:
      - ${PWD}/.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/app:delegated

  nginx1:
    image: nginx:latest
    ports:
      - '80'
    depends_on:
      - phpfpm
      - memcached
      - redis
    volumes:
      - ${PWD}/.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/app:delegated

  memcached:
    image: 'memcached:latest'
    ports:
      - '11211'
    environment:
      - MEMCACHED_CACHE_SIZE=64

  redis:
    image: 'redis:3'
    ports:
      - '6379'

  varnish:
    image: 'wodby/varnish:4'
    depends_on:
      - nginx0
      - nginx1
    environment:
      VARNISHD_VCL_SCRIPT: /etc/varnish/ereolen.vcl
      VARNISH_SECRET: eca2b7c263eae74c0d746f147691e7ce
    volumes:
      - ${PWD}/.docker/ereolen.vcl:/etc/varnish/ereolen.vcl:ro
    labels:
      - "traefik.frontend.rule=Host:ereolen.docker.localhost"

  drush:
    image: itkdev/drush6:latest
    depends_on:
      - mariadb
    entrypoint:
      - drush
    volumes:
      - drush-cache:/root/.drush
      - ./:/app

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025"
      - "8025"
  node:
    image: node:10
    volumes:
      - .:/app:delegated

  reverse-proxy:
    image: traefik
    command: --api --docker
    ports:
      - "80"
      - "8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

# Drush cache volume to persist cache between runs.
volumes:
  drush-cache:
